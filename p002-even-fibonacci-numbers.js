/* Even Fibonacci numbers, Problem 2

Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms. */


function fib(num) {
  let a = 0;
  let b = 1;
  let old_a;
  let sum = 0; // let count = 0;

  if (num < 2) {
    // return num;

    // Sum even numbers
    if (num % 2 === 0) {
      sum += num;
      return sum;
    }
  }

  while (num >= 2) {
    old_a = a;
    a = b;
    b = old_a + a;
    num--; // count++;

    // Sum even numbers
    if (b <= 4000000) {
      if (b % 2 === 0) {
        sum += b;
      }
    } else {
      return `${sum}, "b" exceeds value, INSIDE WHILE`;
    }
  }

  // return b;
  return `${sum}, outside While`;

  // Fib(33) = 3524578
  // Fib(34) = 5702887, exceeds four million
}

let bar = fib(33);
// Any number 33 or greater returns the same sum value => 4613732


function recFib(num) {
  if (num < 2) {
    return num;
  } else {
    return recFib(num - 1) + recFib(num - 2);
  }
}


/*
Fibonacci sequence
a + b > new number

0 + 1 > 1
    1 + 1 > 2
        1 + 2 > 3
            2 + 3 > 5
                3 + 5 > 8
                    5 + 8 > 13
                        8 + 13 > 21


The Fibonacci sequence Rule is:
F(n) = F(n-1) + F(n-2)
*/
